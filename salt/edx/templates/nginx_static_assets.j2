    location ~ /static/((?P<dir>[^/]+)/(?P<file>.*)|(?P<rfile>[\w\d\-.]+)) {
        add_header Access-Control-Allow-Origin *;
        root {{ edxapp_data_dir }};
        try_files /staticfiles/$dir/$file /course_static/$dir/static/$file /staticfiles/$rfile =404;

        # return a 403 for static files that shouldn't be
        # in the staticfiles directory
        location ~ ^/static/(?:.*)(?:\.xml|\.json|README.TXT) {
            return 403;
        }

        location ~ "/static/(?P<collected>.*\.[0-9a-f]{12}\.(eot|otf|ttf|woff|woff2)$)" {
            add_header Access-Control-Allow-Origin *;
            try_files /staticfiles/$collected /course_static/$collected =404;
        }

        # Set django-pipelined files to maximum cache time
        location ~ "/static/(?P<collected>.*\.[0-9a-f]{12}\..*)" {
            expires max;
            # Without this try_files, files that have been run through
            # django-pipeline return 404s
            try_files /staticfiles/$collected /course_static/$collected =404;
        }

        # Expire other static files immediately (there should be very few / none of these)
        expires epoch;
    }

{% if salt.grains.get('business_unit') == 'residential' %}
    # Redirect registration page to authentication page
    location /register {
        return 301 https://$host/login;
    }
{% endif %}
