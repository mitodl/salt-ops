sources:
  collect_host_metrics:
    type: host_metrics
    scrape_interval_secs: 60
    collectors:
      - cpu
      - disk
      - filesystem
      - host
      - load
      - memory
      - network
transforms:
  cleanup_host_metrics:
    type: remap
    inputs:
    - 'collect_host_metrics'
    source: |
      # Drop all the not-real filesystems metrics
      abort_match_filesystem, err = !(match_any(.tags.filesystem, [r'ext.', r'btrfs', r'xfs']))
      if abort_match_filesystem {
        abort
      }
  add_labels_to_host_metrics:
    type: remap
    inputs:
    - 'cleanup_host_metrics'
    source: |
      .tags.environment = "{{ config_elements.environment }}"
      .tags.job = "integrations/linux_host"
      .tags.application = "{{ config_elements.application_name }}"
sinks:
  ship_host_metrics_to_grafana_cloud:
    inputs:
    - 'add_labels_to_host_metrics'
    type: prometheus_remote_write
    endpoint: {{ config_elements.grafana_cloud_prometheus_endpoint }}
    healthcheck: false
    auth:
      strategy: basic
      user: "{{ config_elements.grafana_cloud_cortex_user }}"
      password: {{ config_elements.grafana_cloud_password }}
